# AUTOGENERATED! DO NOT EDIT! File to edit: 02_dailyList.ipynb (unless otherwise specified).

__all__ = ['getQStr', 'getSecDailyIndexUrl', 'getDailyFList', 'noListExceptionPat', 'edgarTxtFPat']

# Cell

import csv
import re

from secscan import utils,recentFeed

# Cell

def getQStr(dateStr) :
    """
    Converts a date in YYYYMMDD format to YYYY/QTRn/
    where n is the quarter number from 1 to 4."
    """
    return dateStr[:4] + '/QTR' + str((int(dateStr[4:6])+2) // 3) + '/'

def getSecDailyIndexUrl(dateStr, listType='master') :
    return ('/Archives/edgar/daily-index/'
            + getQStr(dateStr) + listType + '.' + dateStr + '.idx')

noListExceptionPat = re.compile(r'\b40[34]\b')
edgarTxtFPat = re.compile(
            # gets cik and accession no from a file url within the daily index
            r"\s*edgar/data/(\d+)" # cik - should be same as on the index line
            + r"/("+utils.accessNoPatStr+r")\.txt\s*$", # accession no
            re.IGNORECASE)

def getDailyFList(d) :
    """
    Returns a list of SEC filed forms:
        [(cik, cikName, formType, fileDate, accNo), ... ]
    for the given date or ISO date string, retrieved from
    the SEC daily index.
    """
    dateStr = utils.toDateStr(d)
    try :
        fListRes = utils.downloadSecUrl(getSecDailyIndexUrl(dateStr))
        #print('.',end='')
    except Exception as e :
        if noListExceptionPat.search(str(e)) >= 0 :
            # no list for that date - probably SEC holiday
            return []
        else : # probably connection error or SEC outage
            raise e
    r = csv.reader(fListRes.splitlines(), delimiter='|')
    res = []
    for entry in r :
        if len(entry)==5 and entry[0].isdigit() :
            cik, cikName, formType, fileDate, txtF = entry
        else :
            if len(res) > 0 :
                print('invalid entry', entry)
            continue
        m = edgarTxtFPat.match(txtF)
        if not m :
            print('missing accession no in', entry)
            continue
        if m.group(1) != cik :
            print('cik mismatch in', entry)
        res.append((cik,cikName,formType,fileDate,m.group(2)))
    print('filings for',dateStr+':', len(res), end=' ')
    return res